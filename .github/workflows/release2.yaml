# .github/workflows/release.yaml

on:
  release:
    types: [created]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows]
        goarch: [amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare
        run: |
          sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev libxkbcommon-dev 
          go env -w CGO_ENABLED=1 
          go get fyne.io/fyne/v2@latest 
          go install fyne.io/fyne/v2/cmd/fyne@latest
          go mod tidy
      - name: Set Output Binary Name
        id: vars
        run: echo "binary_name=maxine-vc-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_OUTPUT
      - name: Build Go Binary
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          go build -o ${{ steps.vars.outputs.binary_name }} ./cmd/maxine-vc
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          files: ${{ steps.vars.outputs.binary_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
